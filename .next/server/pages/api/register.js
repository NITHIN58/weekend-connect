"use strict";(()=>{var e={};e.id=553,e.ids=[553],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},1492:e=>{e.exports=import("firebase/firestore")},508:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{config:()=>l,default:()=>d,routeModule:()=>u});var a=r(1802),i=r(7153),o=r(6249),n=r(1876),c=e([n]);n=(c.then?(await c)():c)[0];let d=(0,o.l)(n,"default"),l=(0,o.l)(n,"config"),u=new a.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/register",pathname:"/api/register",bundlePath:"",filename:""},userland:n});s()}catch(e){s(e)}})},1876:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{default:()=>handler});var a=r(1492),i=e([a]);a=(i.then?(await i)():i)[0];let o=(0,a.getFirestore)();async function handler(e,t){if("POST"===e.method)try{let{eventId:r,name:s,email:i}=e.body;if(!r||!s||!i)return t.status(400).json({error:"Missing required fields"});let n=(0,a.doc)(o,"registrations",`${r}-${i}`);await (0,a.setDoc)(n,{eventId:parseInt(r),name:s,email:i,createdAt:new Date}),t.status(201).json({message:"Registration successful"})}catch(e){console.error("Error creating registration:",e),t.status(500).json({error:e.message||"Failed to create registration"})}else if("GET"===e.method)try{let{eventId:r}=e.query;if(!r)return t.status(400).json({error:"Missing required eventId"});let s=(0,a.collection)(o,"registrations"),i=await (0,a.getDocs)((0,a.query)(s,(0,a.where)("eventId","==",r)));t.status(200).json({count:i.size})}catch(e){console.error("Error fetching registrations count:",e),t.status(500).json({error:e.message||"Failed to fetch registrations count"})}else t.setHeader("Allow",["POST","GET"]),t.status(405).end(`Method ${e.method} Not Allowed`)}s()}catch(e){s(e)}})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222],()=>__webpack_exec__(508));module.exports=r})();